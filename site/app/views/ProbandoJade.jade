doctype html(lang='en')
head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    title Hello World!
    // Bootstrap
    link(href='/css/main.css', rel='stylesheet')
    // HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries
    // WARNING: Respond.js doesn't work if you view the page via file://
    //if lt IE 9
      script(src='https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js')
      |
      script(src='https://oss.maxcdn.com/respond/1.4.2/respond.min.js')
body
    h1 Hello World!
    img(src='/img/blob.png')
    img(src=staticHelper('/img/blob.png'))
h1 Welcome to Jade
p
    | Text can be included in a number of
    | different ways.
p.
    This way is shortest if you need big
    blocks of text spanning multiple
    lines.
h1(id="title") Welcome to Jade
button(class="btn", data-action="bea").
    Be Awesome
h1#title Welcome to Jade
button.btn(data-action="bea") Awesome
p
    | Mi nombre es
    = nombre
    | y mi apellido
    = ' ' + apellido
    = ' ' + objeto.propiedad
- var user = { name: 'John' }
if user
    div.welcomebox
        // Filtered inline output
        p.
            Welcome, #{user.name}
else
    div.loginbox
        form(name="login", action="/login", method="post")
            input(type="text", name="user")
            input(type="password", name="pass")
            input(type="submit", value="login")
h2 by #{nombre}
div: p: a Esto es un enlace que no hace nada
foo/
foo(bar='baz')/
//atributos
a(href='google.com') Google
a(class='button', href='google.com') Google
- var authenticated = true
body(class=authenticated ? 'authed' : 'anon')
input(
type='checkbox'
name='agreement'
checked
)
div(escaped="<code>")
div(unescaped!="<code>")
input(type='checkbox', checked)
input(type='checkbox', checked=true)
input(type='checkbox', checked=false)
input(type='checkbox', checked=true.toString())
a(style={color: 'red', background: 'green'})
- var classes = ['foo', 'bar', 'baz']
a(class=classes)
//- the class attribute may also be repeated to merge arrays
a.bing(class=classes class=['bing'])
- var currentUrl = '/about'
//aqui por lo visto si === es igual a lo que se comparar se usa y si no se usa
//lo que se ponga
a(class={active: currentUrl === '/'} href='/') Home
a(class={active: currentUrl === '/about'} href='/about') About
a.button
a#main-link
a.miclase#miid
div#foo(data-bar="foo")&attributes({'data-foo': 'bar'})
div#foo(data-bar="foo")(data-foo='bar')
div#foo(data-bar="foo", data-foo='bar')
//codigo
- for (var x = 0; x < 3; x++)
li Cuidado con la indentacion
- for (var x = 0; x < 3; x++)
li esto no hace nada
    p En fin
p
    = 'This code is <escaped>!'
p= 'This code is' + ' <escaped>!'
p
    != 'This code is <strong>not</strong> escaped!'
p!= 'This code is <strong>not</strong> escaped!'
//
    comentarios, igual que en javasript, si se quieren imprimir pues se ponen igual
    que en html
<!--[if IE 8]>
<html lang="en" class="lt-ie9">
<![endif]-->
<!--[if gt IE 8]><!-->
<html lang="en">
<!--<![endif]-->
//condicionales
- var user = { description: 'foo bar baz' }
- var authorised = false
#user
    if user.description
        h2 Description
        p.description= user.description
    else if authorised
        h2 Description
        p.description.
            User has no description,
            why not add one...
    else
        h1 Description
        p.description User has no description
unless user.isAnonymous
    p You're logged in as #{user.name}
if !user.isAnonymous
    p You're logged in as #{user.name}
//
    select
        each book, i in books
            option(value=i) Book #{book}
    ul
        for book in books
            li= book
        else
            li sorry, no books!
    case name
        when "Bob"
            p Hi Bob!
        when "Alice"
            p Howdy Alice!
        default
            p Hello #{name}!
ul
    each val in [1, 2, 3, 4, 5]
        li= val
ul
    each val, index in ['zero', 'one', 'two']
        li= index + ': ' + val
ul
    each val, index in {1:'one',2:'two',3:'three'}
        li= index + ': ' + val
- var values = [];
ul
    each val in values.length ? values : ['There are no values']
        li= val
- var n = 0
ul
    while n < 4
        li= n++
//mixin
mixin book(name, price)
    li #{name} for #{price} â‚¬
ul#books
    +book("Book A", 12.99)
    +book("Book B", 5.99)
//- Declaration
mixin list
    ul
        li foo
        li bar
        li baz
//- Use
+list
+list
mixin pet(name)
    li.pet= name
ul
    +pet('cat')
    +pet('dog')
    +pet('pig')
mixin article(title)
    .article
        .article-wrapper
            h1= title
            if block
                block
            else
                p No content provided
+article('Hello world')
+article('Hello world')
    p This is my
    p Amazing article
mixin link(href, name)
    //- attributes == {class: "btn"}
    a(class!=attributes.class, href=href)= name
+link('/foo', 'foo')(class="btn")
mixin link(href, name)
    a(href=href)&attributes(attributes)= name
+link('/foo', 'foo')(class="btn")
//numero de articulos indeterminado
mixin list(id, ...items)
    ul(id=id)
        each item in items
            li= item
+list('my-list', 1, 2, 3, 4)
//extend
    esto no lo he entendido muy bien
//includes
include ./layout.jade
//herencia
//interpolacion
- var title = "On Dogs: Man's Best Friend";
- var author = "enlore";
- var theGreat = "<span>escape!</span>";
h1= title
p Written with love by #{author}
p This will be safe: #{theGreat}
- var msg = "not my inside voice";
p This is #{msg.toUpperCase()}
- var riskyBusiness = "<em>Some of the girls are wearing my mother's clothing.</em>";
.quote
    p Joel: !{riskyBusiness}
p.
    If you take a look at this page's source #[a(target="_blank", href="https://github.com/jadejs/jade/blob/master/docs/views/reference/interpolation.jade") on GitHub],
    you'll see several places where the tag interpolation operator is
    used, like so.